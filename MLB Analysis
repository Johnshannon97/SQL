#This is my analysis of MLB data dating back to 1871 using data from Sean Lahman configured by jknecht for SQLite:

#Let's start off with what the record was for the Phillies had in 2019?
select tf.FranchName, t.W, t.L
from Teams t
join TeamsFranchises tf on t.franchID=tf.franchID
where t.yearID=2019
and tf.FranchName='Philadelphia Phillies'
;

#Top 5 Players with the most Homeruns in the 1977 season
select p.nameFirst || ' ' || p.nameLast as Full_Name, t.name, b.HR
from people p
join Batting b
on p.playerID = b.playerID
join Teams t
on b.teamID=t.teamID
where b.yearID= '1977'
group by p.playerid
order by b.HR desc
limit 5
;

#Players in the 2017 allstar game and what team they were representing
select p.nameFirst || ' ' || p.nameLast as Full_Name, min(tf.franchName)
from AllstarFull asf            
join People p
on p.playerID=asf.playerID
join Teams t
on t.teamID=asf.teamID
join TeamsFranchises tf
on t.franchID=tf.franchID
where asf.yearID='2017'
group by p.playerid
;

#Worst ERA to win a CY Young Award and what year they won
select p.nameFirst|| ' ' || p.nameLast as Full_Name, ap.yearID
from People p
join AwardsPlayers ap
on p.playerID=ap.playerID
join Pitching pi
on p.playerID=pi.playerID
and pi.yearID = ap.yearID
where ap.awardID ='Cy Young Award'
order by pi.ERA desc
limit 1
;

#Batting AVG for Top 5 players on each team for the 2019 season
with RankedBatters as (
    select p.nameFirst || ' ' || p.nameLast as Full_Name, round(b.h* 1.0/b.AB, 3) as Batting_Avg, tf.franchName as Team_Name, rank() over (partition by b.teamID order by round(b.h* 1.0/b.AB, 3) desc) as Rank
    from Batting b
    join people p on b.playerID=p.playerID
    join Teams t on b.teamID=t.teamID and b.yearID=t.yearID
    join TeamsFranchises tf on t.franchID=tf.franchID
    where b.yearID='2019'
    and b.AB>30
)
select Full_Name, Batting_Avg, Team_Name
from RankedBatters
where rank <=5
order by Team_Name, Batting_Avg desc;

#Batting AVG for Top 5 players on each team for the 2020 season
with RankedBatters as (
    select p.nameFirst || ' ' || p.nameLast as Full_Name, round(b.h* 1.0/b.AB, 3) as Batting_Avg, tf.franchName as Team_Name, rank() over (partition by b.teamID order by round(b.h* 1.0/b.AB, 3) desc) as Rank
    from Batting b
    join people p on b.playerID=p.playerID
    join Teams t on b.teamID=t.teamID and b.yearID=t.yearID
    join TeamsFranchises tf on t.franchID=tf.franchID
    where b.yearID='2020'
    and b.AB>30
)
select Full_Name, Batting_Avg, Team_Name
from RankedBatters
where rank <=5
order by Team_Name, Batting_Avg desc;

#Average batting avg for the 2020 season
select round(avg(H* 1.0/AB), 3) as Avg_Batting_Avg
from Batting
where yearID='2020'
and AB>0
;

#Averge batting avg for the 2019 season
select round(avg(H* 1.0/AB), 3) as Avg_Batting_Avg
from Batting
where yearID='2019'
and AB>0
;

#Top 5 players by Fielding avg in the 2020 season
select p.nameFirst || ' ' || p.nameLast as Full_Name, f.A as Fielding_Average, tf.franchName as Team_Name
from Fielding f
join People p on f.playerID=p.playerID
join Teams t on f.teamID=t.teamID and f.yearID=t.yearID
join TeamsFranchises tf on t.franchID=tf.FranchID
where f.yearID=2020
order by f.A desc
limit 5
;

#Top 5 heaviest Rookies debuting in 2019
select p.nameFirst || ' ' || p.nameLast as Full_Name, p.weight as Weight, p.debut as Debut_Date
from People p
where p.weight is not null 
and p.debut between '2019-01-01' and '2019-12-31'
order by p.weight desc
limit 5
;

#Top 5 heaviest Rookies who debuted all time
select p.nameFirst || ' ' || p.nameLast as Full_Name, p.weight as Weight, p.debut as Debut_Date
from People p
join Appearances a on p.playerID=a.playerID
where p.weight is not null 
and strftime('%Y',p.debut)=a.yearID
order by p.weight desc
limit 5
;

#Checking on rookie weight for the year 1951
select p.nameFirst || ' ' || p.nameLast as Full_Name, p.weight as Weight
from People p
where p.weight is not null
and p.debut like '%1951%'
order by p.weight desc
;

#It looks like the data Gaedel is an outlier and he's the lightest ever rookie not the heaviest
#Showing the data again accounting for this outlier and removing it from the result with the not equal to statement.
select p.nameFirst || ' ' || p.nameLast as Full_Name, p.weight as Weight, p.debut as Debut_Date
from People p
join Appearances a on p.playerID=a.playerID
where p.weight is not null 
and strftime('%Y',p.debut)=a.yearID
and p.nameLast <> 'Gaedel'
order by p.weight desc
limit 5
;

#Top 5 Players with the Most Career Stolen Bases
select p.nameFirst || ' ' || p.nameLast as Full_Name, sum(b.SB) as Career_SB
from Batting b
join People p on b.playerID=p.playerID
group by b.playerID
order by Career_SB desc
limit 5
;

#Top 5 Batting Averages by Position
with PrimaryPosition as (
select playerID,POS AS position, SUM(G) AS games_played, ROW_NUMBER() over (partition by playerID order by SUM(G) desc) AS pos_rank
from Fielding
group by playerID, POS
),
PlayerPrimaryPosition AS (
select playerID, position
from PrimaryPosition
where pos_rank = 1
),
CareerBatting AS (
select playerID, ROUND(SUM(H) * 1.0 / NULLIF(SUM(AB), 0), 3) AS batting_avg, SUM(AB) AS total_at_bats
from Batting
group by playerID
having total_at_bats >= 100
),
PlayerStats AS (
select pp.playerID, pe.nameFirst || ' ' || pe.nameLast as player_name, pp.position, cb.batting_avg
from PlayerPrimaryPosition pp
join CareerBatting cb on pp.playerID = cb.playerID
join People pe on pp.playerID = pe.playerID
),
RankedPlayers AS (
select player_name, position, batting_avg, ROW_NUMBER() over (partition by position order by batting_avg desc) as rank
from PlayerStats
)
select player_name, position, batting_avg
from RankedPlayers
where rank <= 5
order by position, rank
;

#Most Home Runs in a Season
select max(b.HR) as Total_HR, p.nameFirst || ' ' || nameLast as Player_Name, tf.FranchName, b.yearID
from Batting b
join People p on b.playerID=p.playerID
join Teams t on b.teamID=t.TeamID
join TeamsFranchises tf on t.franchID=tf.FranchID
group by b.playerID, b.yearID
order by Total_HR desc
limit 1
;

#Those results are littered with Steroid scandals, let's sort those known steroid users out to find who hit the most Homeruns in a season without a scandal
select max(b.HR) as Total_HR, p.nameFirst || ' ' || nameLast as Player_Name, tf.FranchName, b.yearID
from Batting b
join People p on b.playerID=p.playerID
join Teams t on b.teamID=t.TeamID
join TeamsFranchises tf on t.franchID=tf.FranchID
where p.nameFirst || ' ' || p.nameLast not in (
'Barry Bonds', 'Alex Rodriguez', 'Rafael Palmeiro', 'Manny Ramirez', 'Sammy Sosa', 'Ivan Rodriguez', 'Mark McGwire', 'Jose Canseco'
)
group by b.playerID, b.yearID
order by Total_HR desc
limit 1
;

#Career Strikeouts Leader - All aboard the Ryan Express
select sum(pi.SO) as Career_SO, p.nameFirst || ' ' || nameLast as Player_Name
from Pitching pi
join People p on pi.playerID=p.playerID
group by p.playerID
order by Career_SO desc
limit 1
;

#All National League and American League Rookie of the Year Winners and what year they won
select p.nameFirst || ' ' || p.nameLast as Player_Name, ap.yearID, tf.FranchName
from AwardsPlayers ap
join People p on ap.playerID=p.playerID
join Batting b on ap.playerID=b.playerID and ap.yearID = b.yearID
join Teams t on b.teamID=t.teamID and b.yearID=t.yearID
join TeamsFranchises tf on t.FranchID=tf.FranchID
where ap.awardID = 'Rookie of the Year'
group by p.playerID
order by ap.yearID desc
;

#Players with atleast 3,000 Career Hits, which ofcourse results in the scandalous Hit King
select p.nameFirst || ' ' || p.nameLast as Player_Name, sum(b.H) as Career_Hits
from Batting b
join People p on b.playerID=p.playerID
group by b.playerID
having sum(b.H) > 3000
order by Career_Hits desc
;
